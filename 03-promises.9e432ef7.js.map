{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAM1BF,KAAKG,iBAAiB,UAI3B,SAAkBC,GAChBA,EAAEC,iBAKF,IAHA,IAAIC,EAAQC,OAAOH,EAAEI,cAAcF,MAAMG,OACnCC,EAASH,OAAOH,EAAEI,cAAcE,OAAOD,OACvCE,EAAOJ,OAAOH,EAAEI,cAAcG,KAAKF,OAChCG,EAAQ,EAAGA,EAAQF,EAAQE,IAQlCC,EAPWD,EACXN,GAAgBK,GAMeG,KAAKC,GAAWC,MAAMC,E,IAIzD,SAASJ,EAAcK,EAAUZ,GAC/B,OAAO,IAAIa,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEM,SAAAR,EAAUZ,UAEpBe,EAAO,CAAEK,SAAAR,EAAUZ,S,GAGpBA,E,IAIP,SAASS,EAAUY,G,IAAEC,EAAFD,EAAED,SAAUpB,EAAZqB,EAAYrB,MAC7BuB,QAAQC,IAAI,uBAAwCC,OAAfH,EAAS,QAAYG,OAANzB,EAAM,OAC1D0B,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCH,OAAfH,EAAS,QAAYG,OAANzB,EAAM,M,CAExE,SAASW,EAASU,G,IAAEQ,EAAFR,EAAED,SAAUpB,EAAZqB,EAAYrB,MAC5BuB,QAAQC,IAAI,sBAAuCC,OAAfI,EAAS,QAAYJ,OAANzB,EAAM,OACzD0B,EAAAlC,GAASmC,OAAOG,QAAQ,sBAAqCL,OAAfI,EAAS,QAAYJ,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// const { formats } = require('flatpickr/dist/utils/formatting');\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  //   delay: document.querySelector('[name=\"delay\"]'),\n  //   step: document.querySelector('[name=\"step\"]'),\n  //   amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nlet position = 0;\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const amount = Number(e.currentTarget.amount.value);\n  const step = Number(e.currentTarget.step.value);\n  for (let index = 0; index < amount; index++) {\n    position = index;\n    delay = delay + step;\n    //     if (index === 1) {\n    //       delay = delay;\n    //     } else {\n    //       delay = delay + step;\n    //     }\n    createPromise(position, delay).then(onFulfill).catch(onReject);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction onFulfill({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onReject({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iU1Pc","parcelRequire","form","document","querySelector","addEventListener","e","preventDefault","delay","Number","currentTarget","value","amount","step","index","$ce04d3a99e08e73b$var$createPromise","then","$ce04d3a99e08e73b$var$onFulfill","catch","$ce04d3a99e08e73b$var$onReject","position1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","param","position2","console","log","concat","$parcel$interopDefault","Notify","success","position3","failure"],"version":3,"file":"03-promises.9e432ef7.js.map"}